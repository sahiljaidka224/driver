import { IMutation } from 'proxy-state-tree';
export declare const IS_TEST: boolean;
export declare const IS_OPERATOR: unique symbol;
export declare const ORIGINAL_ACTIONS: unique symbol;
export declare const EXECUTION: unique symbol;
export declare const MODE_DEFAULT: unique symbol;
export declare const MODE_TEST: unique symbol;
export declare const MODE_SSR: unique symbol;
export declare class MockedEventEmitter {
    emit(): void;
    emitAsync(): void;
    on(): void;
    once(): void;
    addListener(): void;
}
export declare const json: <T>(obj: T) => T;
export declare function isPromise(maybePromise: any): boolean;
export declare function processState(state: {}): {};
export declare function getFunctionName(func: Function): any;
export declare function deepCopy(obj: any): any;
export declare function getChangeMutations(stateA: object, stateB: object, path?: string[], mutations?: IMutation[]): IMutation[];
export declare function getActionPaths(actions?: {}, currentPath?: string[]): any;
export declare function createActionsProxy(actions: any, cb: any): any;
