{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { EventEmitter } from 'betsy'\nimport isPlainObject from 'is-plain-obj'\nimport {\n  IFlushCallback,\n  IMutation,\n  IMutationCallback,\n  IMutationTree,\n  IS_PROXY,\n  ITrackStateTree,\n  PATH,\n  ProxyStateTree,\n  TTree,\n  VALUE,\n} from 'proxy-state-tree'\n\nimport { Derived, IS_DERIVED, IS_DERIVED_CONSTRUCTOR } from './derived'\nimport { Devtools, DevtoolsMessage } from './Devtools'\nimport {\n  DefaultMode,\n  EventType,\n  Events,\n  Execution,\n  NestedPartial,\n  Options,\n  ResolveActions,\n  SSRMode,\n  TestMode\n} from './internalTypes'\nimport {\n  createContext,\n  createMutationOperator,\n  createNextPath,\n  createOperator,\n  operatorStarted,\n  operatorStopped,\n} from './operator'\nimport { proxifyEffects } from './proxyfyEffects'\nimport { rehydrate } from './rehydrate'\nimport {\n  IAction,\n  IConfiguration,\n  IContext,\n  IOnInitialize,\n  IOperator,\n  IReaction,\n  IState,\n} from './types'\nimport {\n  EXECUTION,\n  IS_OPERATOR,\n  IS_TEST,\n  MODE_DEFAULT,\n  MODE_SSR,\n  MODE_TEST,\n  MockedEventEmitter,\n  createActionsProxy,\n  deepCopy,\n  getActionPaths,\n  getChangeMutations,\n  getFunctionName,\n  isPromise,\n  processState\n} from './utils'\n\nexport * from './types'\n\nexport { createOperator, createMutationOperator, ResolveActions }\n\nexport { MODE_DEFAULT, MODE_TEST, MODE_SSR } from './utils'\n\nexport { SERIALIZE, rehydrate } from './rehydrate'\n\nexport { Statemachine, statemachine } from './statemachine'\n\nexport const derived = <S extends IState, R extends IState, O>(cb: (state: S, rootState: R) => O): O => {\n  cb[IS_DERIVED_CONSTRUCTOR] = true\n  return cb as any\n}\n\n/** This type can be overwriten by app developers if they want to avoid\n * typing and then they can import `Action`,  `Operation` etc. directly from\n * overmind.\n */\nexport interface Config {}\n\nexport interface Context extends IContext<Config> {}\n\nexport type RootState = Context[\"state\"]\n\nexport interface Action<Value = void, ReturnValue = void>\n  extends IAction<Config, Value, ReturnValue> {}\n\nexport interface AsyncAction<Value = void, ReturnValue = void>\n  extends IAction<Config, Value, Promise<ReturnValue>> {}\n\nexport interface OnInitialize extends IOnInitialize<Config> {}\n\nexport interface Reaction extends IReaction<Config> {}\n\nexport { json } from './utils'\n\nexport interface OvermindSSR<Config extends IConfiguration>\n  extends Overmind<Config> {\n  hydrate(): IMutation[]\n}\n\nexport function createOvermindSSR<Config extends IConfiguration>(\n  config: Config\n): OvermindSSR<Config> {\n  const ssr = new Overmind(\n    config,\n    {\n      devtools: false,\n    },\n    {\n      mode: MODE_SSR,\n    } as SSRMode\n  ) as any\n\n  const mutationTree = ssr.proxyStateTree.getMutationTree()\n\n  ssr.state = mutationTree.state\n  ssr.hydrate = () => {\n    return mutationTree.flush().mutations\n  }\n  return ssr\n}\n\nexport interface OvermindMock<Config extends IConfiguration>\n  extends Overmind<Config> {\n  onInitialize: () => Promise<IMutation[]>\n  mutations: IMutation[]\n}\n\nexport function createOvermindMock<Config extends IConfiguration>(\n  config: Config,\n  mockedEffects?: NestedPartial<Config['effects']>\n): OvermindMock<Config> {\n  const mock = new Overmind(\n    Object.assign({}, config, {\n      state: deepCopy(config.state),\n    }),\n    {\n      devtools: false,\n    },\n    {\n      mode: MODE_TEST,\n      options: {\n        effectsCallback: (effect) => {\n          const mockedEffect = (effect.name\n            ? effect.name.split('.')\n            : []\n          ).reduce((aggr, key) => (aggr ? aggr[key] : aggr), mockedEffects)\n\n          if (!mockedEffect || (mockedEffect && !mockedEffect[effect.method])) {\n            throw new Error(\n              `The effect \"${effect.name}\" with method ${\n                effect.method\n              } has not been mocked`\n            )\n          }\n          return mockedEffect[effect.method](...effect.args)\n        },\n      },\n    } as TestMode\n  ) as OvermindMock<Config>\n\n  const action = (mock as any).createAction('onInitialize', config.onInitialize)\n\n  mock.onInitialize = () => action(mock)\n  mock.mutations = []\n\n  return mock as any\n}\n\nexport function createOvermind<Config extends IConfiguration>(\n  config: Config,\n  options?: Options\n): Overmind<Config> {\n  return new Overmind(config, options, { mode: MODE_DEFAULT })\n}\n\nconst hotReloadingCache = {}\n\n// We do not use IConfig<Config> directly to type the class in order to avoid\n// the 'import(...)' function to be used in exported types.\nexport class Overmind<ThisConfig extends IConfiguration>\n  implements IConfiguration {\n  private proxyStateTree: ProxyStateTree<object>\n  private actionReferences: { [path: string]: Function } = {}\n  private nextExecutionId: number = 0\n  private mode: DefaultMode | TestMode | SSRMode\n  private reydrateMutationsForHotReloading: IMutation[] = []\n  private originalConfiguration\n  initialized: Promise<any>\n  eventHub: EventEmitter<Events>\n  devtools: Devtools\n  actions: ResolveActions<ThisConfig['actions']>\n  state: ThisConfig['state']\n  effects: ThisConfig['effects'] & {}\n  delimiter: string\n  constructor(\n    configuration: ThisConfig,\n    options: Options = {},\n    mode: DefaultMode | TestMode | SSRMode = {\n      mode: MODE_DEFAULT,\n    } as DefaultMode\n  ) {\n    const name = options.name || 'OvermindApp'\n\n    this.delimiter = options.delimiter || '.'\n\n    if (\n      (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') &&\n      mode.mode === MODE_DEFAULT &&\n      options.hotReloading !== false &&\n      !(process && process.title && process.title.includes('node'))\n    ) {\n      if (hotReloadingCache[name]) {\n        return hotReloadingCache[name].reconfigure(configuration)\n      } else {\n        hotReloadingCache[name] = this\n      }\n    }\n\n    /*\n      Set up an eventHub to trigger information from derived, computed and reactions\n    */\n    const eventHub =\n      mode.mode === MODE_SSR\n        ? new MockedEventEmitter()\n        : new EventEmitter<Events>()\n\n    /*\n      Create the proxy state tree instance with the state and a wrapper to expose\n      the eventHub\n    */\n    const proxyStateTree = this.createProxyStateTree(\n      configuration,\n      eventHub,\n      mode.mode === MODE_SSR ? false : process.env.NODE_ENV === 'development'\n    )\n    this.originalConfiguration = configuration\n    this.state = proxyStateTree.state\n    this.effects = configuration.effects || {}\n    this.proxyStateTree = proxyStateTree\n    this.eventHub = eventHub as EventEmitter<Events>\n    this.mode = mode\n\n\n    /*\n      Expose the created actions\n    */\n    this.actions = this.getActions(configuration.actions)\n    \n    if (mode.mode === MODE_SSR) {\n      return\n    }\n\n    if (\n      process.env.NODE_ENV === 'development' &&\n      mode.mode === MODE_DEFAULT &&\n      typeof window !== 'undefined'\n    ) {\n      let warning = 'OVERMIND: You are running in DEVELOPMENT mode.'\n      if (options.logProxies !== true) {\n        const originalConsoleLog = console.log\n\n        console.log = (...args) =>\n          originalConsoleLog.apply(\n            console,\n            args.map((arg) => (arg && arg[IS_PROXY] ? arg[VALUE] : arg))\n          )\n        warning +=\n          '\\n\\n - To improve debugging experience \"console.log\" will NOT log proxies from Overmind, but the actual value. Please see docs to turn off this behaviour'\n      }\n\n      if (\n        options.devtools ||\n        (typeof location !== 'undefined' &&\n          location.hostname === 'localhost' &&\n          options.devtools !== false)\n      ) {\n        const host =\n          options.devtools === true ? 'localhost:3031' : options.devtools\n        const name = options.name\n          ? options.name\n          : typeof document === 'undefined'\n          ? 'NoName'\n          : document.title || 'NoName'\n\n        this.initializeDevtools(\n          host,\n          name,\n          eventHub,\n          proxyStateTree.sourceState,\n          configuration.actions\n        )\n      } else if (options.devtools !== false) {\n        warning +=\n          '\\n\\n - You are not running on localhost. You will have to manually define the devtools option to connect'\n      }\n\n      if (!IS_TEST) {\n        console.warn(warning)\n      }\n    }\n\n    if (process.env.NODE_ENV === 'production' && mode.mode === MODE_DEFAULT) {\n      eventHub.on(EventType.OPERATOR_ASYNC, (execution) => {\n        if (\n          !execution.parentExecution ||\n          !execution.parentExecution.isRunning\n        ) {\n          proxyStateTree.getMutationTree().flush(true)\n        }\n      })\n      eventHub.on(EventType.ACTION_END, (execution) => {\n        if (!execution.parentExecution || !execution.parentExecution.isRunning)\n          proxyStateTree.getMutationTree().flush()\n      })\n\n      let nextTick\n      const flushTree = () => {\n        proxyStateTree.getMutationTree().flush(true)\n      }\n\n      this.proxyStateTree.onMutation(() => {\n        nextTick && clearTimeout(nextTick)\n        nextTick = setTimeout(flushTree, 0)\n      })\n    } else if (mode.mode === MODE_DEFAULT || mode.mode === MODE_TEST) {\n      if (process.env.NODE_ENV === 'test' || (this.devtools && options.hotReloading !== false)) {\n        eventHub.on(EventType.MUTATIONS, (execution) => {\n          this.reydrateMutationsForHotReloading = this.reydrateMutationsForHotReloading.concat(execution.mutations)\n        })\n      }\n      eventHub.on(EventType.OPERATOR_ASYNC, (execution) => {\n        if (\n          !execution.parentExecution ||\n          !execution.parentExecution.isRunning\n        ) {\n          const flushData = execution.flush(true)\n          if (this.devtools && flushData.mutations.length) {\n            this.devtools.send({\n              type: 'flush',\n              data: {\n                ...execution,\n                ...flushData,\n              },\n            })\n          }\n        }\n      })\n      eventHub.on(EventType.ACTION_END, (execution) => {\n        if (\n          !execution.parentExecution ||\n          !execution.parentExecution.isRunning\n        ) {\n          const flushData = execution.flush()\n\n          if (this.devtools && flushData.mutations.length) {\n            this.devtools.send({\n              type: 'flush',\n              data: {\n                ...execution,\n                ...flushData,\n              },\n            })\n          }\n        }\n      })\n    }\n\n    if (mode.mode === MODE_DEFAULT && configuration.onInitialize) {\n      const onInitialize = this.createAction(\n        'onInitialize',\n        configuration.onInitialize\n      ) as any\n\n      this.initialized = Promise.resolve(onInitialize(this))\n    } else {\n      this.initialized = Promise.resolve(null)\n    }\n  }\n  private createProxyStateTree(\n    configuration: IConfiguration,\n    eventHub: EventEmitter<any> | MockedEventEmitter,\n    devmode: boolean\n  ) {\n    const proxyStateTree = new ProxyStateTree(\n      this.getState(configuration) as any,\n      {\n        devmode,\n        delimiter: this.delimiter,\n        onFunction: (tree, path, func) => {\n          if (func[IS_DERIVED]) {\n            return { func, value: func(eventHub, tree, proxyStateTree, path.split(this.delimiter)) }\n          }\n\n          if (func[IS_DERIVED_CONSTRUCTOR]) {\n            const derived = new Derived(func) as any\n\n            return {\n              func: derived,\n              value: derived(eventHub, tree, proxyStateTree, path.split(this.delimiter))\n            }\n          }\n\n          return {\n            func,\n            value: func\n          }\n        },    \n        onGetter: devmode\n          ? (path, value) => {\n              this.eventHub.emitAsync(EventType.GETTER, {\n                path,\n                value\n              })\n            }\n          : undefined,\n      }\n    )\n\n    return proxyStateTree\n  }\n  private createExecution(name, action, parentExecution) {\n    const namespacePath = name.split('.')\n\n    namespacePath.pop()\n\n    if (process.env.NODE_ENV === 'production') {\n      return ({\n        [EXECUTION]: true,\n        parentExecution,\n        namespacePath,\n        actionName: name,\n        getMutationTree: () => {\n          return this.proxyStateTree.getMutationTree()\n        },\n        getTrackStateTree: () => {\n          return this.proxyStateTree.getTrackStateTree()\n        },\n        emit: this.eventHub.emit.bind(this.eventHub),\n      } as any) as Execution\n    }\n\n    const mutationTrees: any[] = []\n    const execution = {\n      [EXECUTION]: true,\n      namespacePath,\n      actionId: name,\n      executionId: this.nextExecutionId++,\n      actionName: name,\n      operatorId: 0,\n      isRunning: true,\n      parentExecution,\n      path: [],\n      emit: this.eventHub.emit.bind(this.eventHub),\n      send: this.devtools ? this.devtools.send.bind(this.devtools) : () => {},\n      trackEffects: this.trackEffects.bind(this, this.effects),\n      getNextOperatorId: (() => {\n        let currentOperatorId = 0\n        return () => ++currentOperatorId\n      })(),\n      flush: parentExecution\n        ? parentExecution.flush\n        : (isAsync?: boolean) => {\n            return this.proxyStateTree.flush(mutationTrees, isAsync)\n          },\n      getMutationTree: parentExecution\n        ? parentExecution.getMutationTree\n        : () => {\n            const mutationTree = this.proxyStateTree.getMutationTree()\n\n            mutationTrees.push(mutationTree)\n\n            if (this.mode.mode === MODE_TEST) {\n              mutationTree.onMutation((mutation) => {\n                this.addExecutionMutation(mutation)\n              })\n            }\n            return mutationTree\n          },\n      getTrackStateTree: () => {\n        return this.proxyStateTree.getTrackStateTree()\n      },\n      onFlush: (cb) => {\n        return this.proxyStateTree.onFlush(cb)\n      },\n      scopeValue: (value, tree) => {\n        return this.scopeValue(value, tree)\n      },\n    }\n\n    return execution\n  }\n  private createContext(execution, tree) {\n    return {\n      state: tree.state,\n      actions: createActionsProxy(this.actions, (action) => {\n        return (value) => action(value, execution.isRunning ? execution : null)\n      }),\n      execution,\n      proxyStateTree: this.proxyStateTree,\n      effects: this.trackEffects(this.effects, execution),\n    }\n  }\n  private scopeValue(value: any, tree: TTree) {\n    if (!value) {\n      return value\n    }\n    if (value[IS_PROXY]) {\n      return this.proxyStateTree.rescope(value, tree)\n    } else if (isPlainObject(value)) {\n      return Object.assign(\n        {},\n        ...Object.keys(value).map((key) => ({\n          [key]: this.proxyStateTree.rescope(value[key], tree),\n        }))\n      )\n    } else {\n      return value\n    }\n  }\n  private addExecutionMutation(mutation: IMutation) {\n    ;((this as unknown) as OvermindMock<Config>).mutations.push(mutation)\n  }\n  private createAction(name, originalAction) {\n    this.actionReferences[name] = originalAction\n    const actionFunc = (value?, boundExecution?: Execution) => {\n      const action = this.actionReferences[name]\n      // Developer might unintentionally pass more arguments, so have to ensure\n      // that it is an actual execution\n      boundExecution =\n        boundExecution && boundExecution[EXECUTION] ? boundExecution : undefined\n\n      if (process.env.NODE_ENV === 'production' || action[IS_OPERATOR]) {\n        const execution = this.createExecution(name, action, boundExecution)\n        this.eventHub.emit(EventType.ACTION_START, {\n          ...execution,\n          value\n        })\n\n        if (action[IS_OPERATOR]) {\n          return new Promise((resolve, reject) => {\n            action(\n              null,\n              {\n                ...this.createContext(execution, this.proxyStateTree),\n                value,\n              },\n              (err, finalContext) => {\n                execution.isRunning = false\n                finalContext &&\n                  this.eventHub.emit(EventType.ACTION_END, {\n                    ...finalContext.execution,\n                    operatorId: finalContext.execution.operatorId - 1,\n                  })\n                if (err) reject(err)\n                else {\n                  resolve(\n                    this.mode.mode === MODE_TEST\n                      ? finalContext.execution\n                      : undefined\n                  )\n                }\n              }\n            )\n          })\n        } else {\n          const returnValue = action(\n            this.createContext(execution, execution.getMutationTree()),\n            value\n          )\n\n          this.eventHub.emit(EventType.ACTION_END, execution)\n\n          return returnValue\n        }\n      } else {\n        const execution = {\n          ...this.createExecution(name, action, boundExecution),\n          operatorId: 0,\n          type: 'action',\n        }\n        this.eventHub.emit(EventType.ACTION_START, {\n          ...execution,\n          value\n        })\n        this.eventHub.emit(EventType.OPERATOR_START, execution)\n\n        const mutationTree = execution.getMutationTree()\n\n        mutationTree.onMutation((mutation) => {\n          this.eventHub.emit(EventType.MUTATIONS, {\n            ...execution,\n            mutations: [mutation],\n          })\n        })\n\n        const scopedValue = this.scopeValue(value, mutationTree)\n        const context = this.createContext(execution, mutationTree)\n\n        try {\n          let result = action(context, scopedValue)\n\n          if (isPromise(result)) {\n            this.eventHub.emit(EventType.OPERATOR_ASYNC, execution)\n            result = result\n              .then((promiseResult) => {\n                execution.isRunning = false\n                if (!boundExecution) {\n                  mutationTree.dispose()\n                }\n                this.eventHub.emit(EventType.OPERATOR_END, {\n                  ...execution,\n                  isAsync: true,\n                  result: undefined,\n                })\n                this.eventHub.emit(EventType.ACTION_END, execution)\n\n                return promiseResult\n              })\n              .catch((error) => {\n                execution.isRunning = false\n                if (!boundExecution) {\n                  mutationTree.dispose()\n                }\n                this.eventHub.emit(EventType.OPERATOR_END, {\n                  ...execution,\n                  isAsync: true,\n                  result: undefined,\n                  error: error.message,\n                })\n                this.eventHub.emit(EventType.ACTION_END, execution)\n\n                throw error\n              })\n          } else {\n            execution.isRunning = false\n            if (!boundExecution) {\n              mutationTree.dispose()\n            }\n            this.eventHub.emit(EventType.OPERATOR_END, {\n              ...execution,\n              isAsync: false,\n              result: undefined,\n            })\n            this.eventHub.emit(EventType.ACTION_END, execution)\n          }\n\n          let pendingFlush\n          mutationTree.onMutation((mutation) => {\n            if (pendingFlush) {\n              clearTimeout(pendingFlush)\n            }\n\n            if (this.mode.mode === MODE_TEST) {\n              this.addExecutionMutation(mutation)\n            }\n\n            pendingFlush = setTimeout(() => {\n              pendingFlush = null\n              const flushData = execution.flush(true)\n\n              if (this.devtools && flushData.mutations.length) {\n                this.devtools.send({\n                  type: 'flush',\n                  data: {\n                    ...execution,\n                    ...flushData,\n                    mutations: flushData.mutations,\n                  },\n                })\n              }\n            })\n          })\n\n          return result\n        } catch (err) {\n          this.eventHub.emit(EventType.OPERATOR_END, {\n            ...execution,\n            isAsync: false,\n            result: undefined,\n            error: err.message,\n          })\n          this.eventHub.emit(EventType.ACTION_END, execution)\n          throw err\n        }\n      }\n    }\n\n    return actionFunc\n  }\n  private trackEffects(effects = {}, execution) {\n    \n    if (process.env.NODE_ENV === 'production') {\n      return effects\n    }\n\n    return proxifyEffects(this.effects, (effect) => {\n      let result\n      try {\n        if (this.mode.mode === MODE_TEST) {\n          const mode = this.mode as TestMode\n          result = mode.options.effectsCallback(effect)\n        } else {\n          this.eventHub.emit(EventType.EFFECT, {\n            ...execution,\n            ...effect,\n            args: effect.args,\n            isPending: true,\n            error: false,\n          })\n          result = effect.func.apply(this, effect.args)\n        }\n      } catch (error) {\n        // eslint-disable-next-line standard/no-callback-literal\n        this.eventHub.emit(EventType.EFFECT, {\n          ...execution,\n          ...effect,\n          args: effect.args,\n          isPending: false,\n          error: error.message,\n        })\n        throw error\n      }\n\n      if (isPromise(result)) {\n        // eslint-disable-next-line standard/no-callback-literal\n        this.eventHub.emit(EventType.EFFECT, {\n          ...execution,\n          ...effect,\n          args: effect.args,\n          isPending: true,\n          error: false,\n        })\n\n        return result\n          .then((promisedResult) => {\n            // eslint-disable-next-line standard/no-callback-literal\n            this.eventHub.emit(EventType.EFFECT, {\n              ...execution,\n              ...effect,\n              args: effect.args,\n              result: promisedResult,\n              isPending: false,\n              error: false,\n            })\n\n            return promisedResult\n          })\n          .catch((error) => {\n            this.eventHub.emit(EventType.EFFECT, {\n              ...execution,\n              ...effect,\n              args: effect.args,\n              isPending: false,\n              error: error && error.message,\n            })\n            throw error\n          })\n      }\n\n      // eslint-disable-next-line standard/no-callback-literal\n      this.eventHub.emit(EventType.EFFECT, {\n        ...execution,\n        ...effect,\n        args: effect.args,\n        result: result,\n        isPending: false,\n        error: false,\n      })\n\n      return result\n    })\n  }\n  private initializeDevtools(host, name, eventHub, initialState, actions) {\n    if (process.env.NODE_ENV === 'production') return\n    const devtools = new Devtools(name)\n    devtools.connect(\n      host,\n      (message: DevtoolsMessage) => {\n        switch (message.type) {\n          case 'refresh':\n            location.reload(true)\n            break\n          case 'executeAction':\n            const action = message.data.name\n              .split('.')\n              .reduce((aggr, key) => aggr[key], this.actions)\n            message.data.payload\n              ? action(JSON.parse(message.data.payload))\n              : action()\n            break\n          case 'mutation':\n            const tree = this.proxyStateTree.getMutationTree()\n            const path = message.data.path.slice()\n            const value = JSON.parse(`{ \"value\": ${message.data.value} }`).value\n            const key = path.pop()\n            const state = path.reduce((aggr, key) => aggr[key], tree.state)\n\n            state[key] = value\n            tree.flush(true)\n            tree.dispose()\n            this.devtools.send({\n              type: 'state',\n              data: {\n                path: message.data.path,\n                value,\n              },\n            })\n        }\n      }\n    )\n    for (let type in EventType) {\n      eventHub.on(\n        EventType[type],\n        ((eventType) => (data) => {\n          devtools.send({\n            type: EventType[type],\n            data,\n          })\n\n          if (eventType === EventType.MUTATIONS) {\n            // We want to trigger property access when setting objects and arrays, as any derived set would\n            // then trigger and update the devtools\n            data.mutations.forEach((mutation) => {\n              const value = mutation.path.split(this.delimiter).reduce((aggr, key) => aggr[key], this.proxyStateTree.state)\n              if (isPlainObject(value)) {\n                Object.keys(value).forEach((key) => value[key])\n              } else if (Array.isArray(value)) {\n                value.forEach((item) => {\n                  if (isPlainObject(item)) {\n                    Object.keys(item).forEach((key) => item[key])\n                  }\n                })\n              }\n            })\n          }\n          \n          // Access the derived which will trigger calculation and devtools\n          if (eventType === EventType.DERIVED_DIRTY) {\n            data.derivedPath\n              .reduce((aggr, key) => aggr[key], this.proxyStateTree.state)\n          }\n        })(EventType[type])\n      )\n    }\n    devtools.send({\n      type: 'init',\n      data: {\n        state: this.proxyStateTree.state,\n        actions: getActionPaths(actions),\n        delimiter: this.delimiter\n      },\n    })\n    this.devtools = devtools\n  }\n  private getState(configuration: IConfiguration) {\n    let state = {}\n    if (configuration.state) {\n      state = processState(\n        configuration.state,\n      )\n    }\n\n    return state\n  }\n  private getActions(actions: any = {}, path: string[] = []) {\n    return Object.keys(actions).reduce((aggr, name) => {\n      if (typeof actions[name] === 'function') {\n        const action = this.createAction(\n          path.concat(name).join('.'),\n          actions[name]\n        ) as any\n\n        action.displayName = path.concat(name).join('.')\n\n        return Object.assign(aggr, {\n          [name]: action,\n        })\n      }\n\n      return Object.assign(aggr, {\n        [name]: this.getActions(actions[name], path.concat(name)),\n      })\n    }, {}) as any\n  }\n  /*\n    Related to hot reloading we update the existing action references and add any new\n    actions.\n  */\n  private updateActions(actions: any = {}, path: string[] = []) {\n    Object.keys(actions).forEach((name) => {\n      if (typeof actions[name] === 'function') {\n        const actionName = path.concat(name).join('.')\n        if (this.actionReferences[actionName]) {\n          this.actionReferences[actionName] = actions[name]\n        } else {\n          const target = path.reduce((aggr, key) => {\n            if (!aggr[key]) {\n              aggr[key] = {}\n            }\n\n            return aggr[key]\n          }, this.actions)\n          target[name] = this.createAction(\n            actionName,\n            actions[name]\n          ) as any\n  \n          target[name].displayName = path.concat(name).join('.')\n        }\n      } else {\n        this.updateActions(actions[name], path.concat(name))\n      }\n    }, {}) as any\n  }\n  getTrackStateTree(): ITrackStateTree<any> {\n    return this.proxyStateTree.getTrackStateTree()\n  }\n  getMutationTree(): IMutationTree<any> {\n    return this.proxyStateTree.getMutationTree()\n  }\n  reaction: IReaction<ThisConfig> = (\n    stateCallback,\n    updateCallback,\n    options = {}\n  ) => {\n    let disposer\n\n    if (options.nested) {\n      const value = stateCallback(this.state)\n\n      if (!value || !value[IS_PROXY]) {\n        throw new Error(\n          'You have to return an object or array from the Overmind state when using a \"nested\" reaction'\n        )\n      }\n\n      const path = value[PATH]\n\n      disposer = this.addFlushListener((mutations) => {\n        mutations.forEach((mutation) => {\n          if (mutation.path.startsWith(path)) {\n            updateCallback(\n              path.split(this.delimiter).reduce((aggr, key) => aggr[key], this.state)\n            )\n          }\n        })\n      })\n    } else {\n      const tree = this.proxyStateTree.getTrackStateTree()\n      let returnValue\n      const updateReaction = () => {\n        tree.trackScope(\n          () => (returnValue = stateCallback(tree.state as any)),\n          () => {\n            updateReaction()\n            updateCallback(returnValue)\n          }\n        )\n      }\n\n      updateReaction()\n\n      disposer = () => {\n        tree.dispose()\n      }\n    }\n\n    if (options.immediate) {\n      updateCallback(stateCallback(this.state as any))\n    }\n\n    return disposer\n  }\n  addMutationListener = (cb: IMutationCallback) => {\n    return this.proxyStateTree.onMutation(cb)\n  }\n  addFlushListener = (cb: IFlushCallback) => {\n    return this.proxyStateTree.onFlush(cb)\n  }\n  reconfigure(configuration: IConfiguration) {\n    const changeMutations = getChangeMutations(this.originalConfiguration.state, configuration.state || {})\n\n    this.updateActions(configuration.actions)\n    this.effects = configuration.effects || {}\n\n    const mutationTree = this.proxyStateTree.getMutationTree()\n    // We change the state to match the new structure\n    rehydrate(mutationTree.state as any, changeMutations)\n\n    // We run any mutations ran during the session, it might fail though\n    // as the state structure might have changed, but no worries we just\n    // ignore that\n    this.reydrateMutationsForHotReloading.forEach((mutation) => {\n      try {\n        rehydrate(mutationTree.state as any, [mutation])\n      } catch (error) {\n        // No worries, structure changed and we do not want to mutate anyways\n      }\n    })\n\n    mutationTree.flush()\n    mutationTree.dispose()\n\n    if (this.devtools) {\n      this.devtools.send({\n        type: 're_init',\n        data: {\n          state: this.state,\n          actions: getActionPaths(configuration.actions),\n        },\n      })\n    }\n\n    return this\n  }\n}\n\n/*\n  OPERATORS\n  needs to be in this file for typing override to work\n*/\nexport type Operator<Input = void, Output = Input> = IOperator<\n  Config,\n  Input,\n  Output\n>\n\nexport function pipe<ThisConfig extends IConfiguration, A, B, Output = B>(\n  aOperator: IOperator<ThisConfig, A, B>\n): IOperator<ThisConfig, A, Output>\n\nexport function pipe<ThisConfig extends IConfiguration, A, B, C, Output = C>(\n  aOperator: IOperator<ThisConfig, A, B>,\n  bOperator: IOperator<ThisConfig, B, C>\n): IOperator<ThisConfig, A, Output>\n\nexport function pipe<ThisConfig extends IConfiguration, A, B, C, D, Output = D>(\n  aOperator: IOperator<ThisConfig, A, B>,\n  bOperator: IOperator<ThisConfig, B, C>,\n  cOperator: IOperator<ThisConfig, C, D>\n): IOperator<ThisConfig, A, Output>\n\nexport function pipe<\n  ThisConfig extends IConfiguration,\n  A,\n  B,\n  C,\n  D,\n  E,\n  Output = E\n>(\n  aOperator: IOperator<ThisConfig, A, B>,\n  bOperator: IOperator<ThisConfig, B, C>,\n  cOperator: IOperator<ThisConfig, C, D>,\n  dOperator: IOperator<ThisConfig, D, E>\n): IOperator<ThisConfig, A, Output>\n\nexport function pipe<\n  ThisConfig extends IConfiguration,\n  A,\n  B,\n  C,\n  D,\n  E,\n  F,\n  Output = F\n>(\n  aOperator: IOperator<ThisConfig, A, B>,\n  bOperator: IOperator<ThisConfig, B, C>,\n  cOperator: IOperator<ThisConfig, C, D>,\n  dOperator: IOperator<ThisConfig, D, E>,\n  eOperator: IOperator<ThisConfig, E, F>\n): IOperator<ThisConfig, A, Output>\n\nexport function pipe<\n  ThisConfig extends IConfiguration,\n  A,\n  B,\n  C,\n  D,\n  E,\n  F,\n  G,\n  Output = G\n>(\n  aOperator: IOperator<ThisConfig, A, B>,\n  bOperator: IOperator<ThisConfig, B, C>,\n  cOperator: IOperator<ThisConfig, C, D>,\n  dOperator: IOperator<ThisConfig, D, E>,\n  eOperator: IOperator<ThisConfig, E, F>,\n  fOperator: IOperator<ThisConfig, F, G>\n): IOperator<ThisConfig, A, Output>\n\nexport function pipe<\n  ThisConfig extends IConfiguration,\n  A,\n  B,\n  C,\n  D,\n  E,\n  F,\n  G,\n  H,\n  Output = H\n>(\n  aOperator: IOperator<ThisConfig, A, B>,\n  bOperator: IOperator<ThisConfig, B, C>,\n  cOperator: IOperator<ThisConfig, C, D>,\n  dOperator: IOperator<ThisConfig, D, E>,\n  eOperator: IOperator<ThisConfig, E, F>,\n  fOperator: IOperator<ThisConfig, F, G>,\n  gOperator: IOperator<ThisConfig, G, H>\n): IOperator<ThisConfig, A, Output>\n\nexport function pipe<\n  ThisConfig extends IConfiguration,\n  A,\n  B,\n  C,\n  D,\n  E,\n  F,\n  G,\n  H,\n  I\n>(\n  aOperator: IOperator<ThisConfig, A, B>,\n  bOperator: IOperator<ThisConfig, B, C>,\n  cOperator: IOperator<ThisConfig, C, D>,\n  dOperator: IOperator<ThisConfig, D, E>,\n  eOperator: IOperator<ThisConfig, E, F>,\n  fOperator: IOperator<ThisConfig, F, G>,\n  gOperator: IOperator<ThisConfig, G, H>,\n  hOperator: IOperator<ThisConfig, H, I>\n): IOperator<ThisConfig, A, I extends never ? any : I>\n\nexport function pipe<\n  ThisConfig extends IConfiguration,\n  A,\n  B,\n  C,\n  D,\n  E,\n  F,\n  G,\n  H,\n  I,\n  J\n>(\n  aOperator: IOperator<ThisConfig, A, B>,\n  bOperator: IOperator<ThisConfig, B, C>,\n  cOperator: IOperator<ThisConfig, C, D>,\n  dOperator: IOperator<ThisConfig, D, E>,\n  eOperator: IOperator<ThisConfig, E, F>,\n  fOperator: IOperator<ThisConfig, F, G>,\n  gOperator: IOperator<ThisConfig, G, H>,\n  hOperator: IOperator<ThisConfig, H, I>,\n  iOperator: IOperator<ThisConfig, I, J>\n): IOperator<ThisConfig, A, J extends never ? any : J>\n\nexport function pipe<\n  ThisConfig extends IConfiguration,\n  A,\n  B,\n  C,\n  D,\n  E,\n  F,\n  G,\n  H,\n  I,\n  J,\n  K\n>(\n  aOperator: IOperator<ThisConfig, A, B>,\n  bOperator: IOperator<ThisConfig, B, C>,\n  cOperator: IOperator<ThisConfig, C, D>,\n  dOperator: IOperator<ThisConfig, D, E>,\n  eOperator: IOperator<ThisConfig, E, F>,\n  fOperator: IOperator<ThisConfig, F, G>,\n  gOperator: IOperator<ThisConfig, G, H>,\n  hOperator: IOperator<ThisConfig, H, I>,\n  iOperator: IOperator<ThisConfig, I, J>,\n  jOperator: IOperator<ThisConfig, J, K>\n): IOperator<ThisConfig, A, K extends never ? any : K>\n\nexport function pipe(...operators) {\n  const instance = (err, context, next, final = next) => {\n    if (err) next(err, context)\n    else {\n      let operatorIndex = 0\n\n      const run = (operatorErr, operatorContext) => {\n        const operator = operators[operatorIndex++]\n\n        try {\n          ;(operator || next)(operatorErr, operatorContext, run, final)\n        } catch (operatorError) {\n          ;(operator || next)(operatorError, operatorContext, run, final)\n        }\n      }\n\n      run(null, context)\n    }\n  }\n  instance[IS_OPERATOR] = true\n  return instance\n}\n\n/*\n  OPERATORS\n*/\nexport function forEach<\n  Input extends any[],\n  ThisConfig extends IConfiguration = Config\n>(\n  forEachItemOperator: IOperator<\n    ThisConfig,\n    Input extends Array<infer U> ? U : never\n  >\n): IOperator<ThisConfig, Input, Input> {\n  const instance = (err, context, next) => {\n    if (err) next(err, context)\n    else {\n      let array = context.value\n      let evaluatingCount = array.length\n      let lastContext\n      let hasErrored = false\n      const evaluate = (err) => {\n        if (hasErrored) {\n          return\n        }\n        if (err) {\n          hasErrored = true\n          return next(err)\n        }\n        evaluatingCount--\n\n        if (!evaluatingCount) {\n          operatorStopped(context, context.value)\n          next(\n            null,\n            createContext(\n              lastContext,\n              context.value,\n              lastContext.execution.path &&\n                lastContext.execution.path.slice(\n                  0,\n                  lastContext.execution.path.length - 1\n                )\n            )\n          )\n        }\n      }\n      operatorStarted('forEach', '', context)\n\n      if (array.length) {\n        array.forEach((value, index) => {\n          lastContext = createContext(\n            lastContext || context,\n            value,\n            context.execution.path &&\n              context.execution.path.concat(String(index))\n          )\n          const nextWithPath = createNextPath(evaluate)\n          // @ts-ignore\n          forEachItemOperator(null, lastContext, nextWithPath)\n        })\n      } else {\n        operatorStopped(context, context.value)\n        next(null, createContext(context, context.value))\n      }\n    }\n  }\n  instance[IS_OPERATOR] = true\n\n  return instance as any\n}\n\nexport function parallel<Input, ThisConfig extends IConfiguration = Config>(\n  ...operators: IOperator<ThisConfig, Input>[]\n): IOperator<ThisConfig, Input, Input> {\n  const instance = (err, context, next) => {\n    if (err) next(err, context)\n    else {\n      let evaluatingCount = operators.length\n      let lastContext\n      let hasErrored = false\n      const evaluate = (err) => {\n        if (hasErrored) {\n          return\n        }\n        if (err) {\n          hasErrored = true\n          return next(err, lastContext)\n        }\n        evaluatingCount--\n\n        if (!evaluatingCount) {\n          operatorStopped(context, context.value)\n          next(\n            null,\n            createContext(\n              lastContext,\n              context.value,\n              lastContext.execution.path &&\n                lastContext.execution.path.slice(\n                  0,\n                  lastContext.execution.path.length - 1\n                )\n            )\n          )\n        }\n      }\n      operatorStarted('parallel', '', context)\n\n      operators.forEach((operator, index) => {\n        lastContext = createContext(\n          lastContext || context,\n          context.value,\n          context.execution.path && context.execution.path.concat(String(index))\n        )\n        const nextWithPath = createNextPath(evaluate)\n        // @ts-ignore\n        operator(null, lastContext, nextWithPath)\n      })\n    }\n  }\n  instance[IS_OPERATOR] = true\n\n  return instance as any\n}\n\nexport function map<Input, Output, ThisConfig extends IConfiguration = Config>(\n  operation: (context: IContext<ThisConfig>, value: Input) => Output\n): IOperator<ThisConfig, Input, Output extends Promise<infer U> ? U : Output> {\n  return createOperator<ThisConfig>(\n    'map',\n    getFunctionName(operation),\n    (err, context, value, next) => {\n      if (err) next(err, value)\n      else next(null, operation(context, value))\n    }\n  )\n}\n\nexport function noop<\n  Input,\n  ThisConfig extends IConfiguration = Config\n>(): IOperator<ThisConfig, Input> {\n  return createOperator<ThisConfig>('noop', '', (err, context, value, next) => {\n    if (err) next(err, value)\n    else next(null, value)\n  })\n}\n\nexport function filter<Input, ThisConfig extends IConfiguration = Config>(\n  operation: (context: IContext<ThisConfig>, value: Input) => boolean\n): IOperator<ThisConfig, Input, Input> {\n  return createOperator<ThisConfig>(\n    'filter',\n    getFunctionName(operation),\n    (err, context, value, next, final) => {\n      if (err) next(err, value)\n      else if (operation(context, value)) next(null, value)\n      else final(null, value)\n    }\n  )\n}\n\nlet hasShownActionDeprecation = false\nexport function action<Input, ThisConfig extends IConfiguration = Config>(\n  operation: (context: IContext<ThisConfig>, value: Input) => void\n): IOperator<ThisConfig, Input, Input> {\n  if (!hasShownActionDeprecation) {\n    console.warn(\n      `DEPRECATION - The action operator is deprecated in favor of \"mutate\". The reason is to avoid confusion between actions and operators. Check out action \"${getFunctionName(\n        operation\n      )}\"`\n    )\n    hasShownActionDeprecation = true\n  }\n\n  return createMutationOperator<ThisConfig>(\n    'action',\n    getFunctionName(operation),\n    (err, context, value, next) => {\n      if (err) next(err, value)\n      else {\n        const result = operation(context, value) as any\n\n        if (isPromise(result)) {\n          next(null, result.then(() => value))\n        } else {\n          next(null, value)\n        }\n      }\n    }\n  )\n}\n\nexport function mutate<Input, ThisConfig extends IConfiguration = Config>(\n  operation: (context: IContext<ThisConfig>, value: Input) => void\n): IOperator<ThisConfig, Input, Input> {\n  return createMutationOperator<ThisConfig>(\n    'mutate',\n    getFunctionName(operation),\n    (err, context, value, next) => {\n      if (err) next(err, value)\n      else {\n        const result = operation(context, value) as any\n\n        if (isPromise(result)) {\n          next(null, result.then(() => value))\n        } else {\n          next(null, value)\n        }\n      }\n    }\n  )\n}\n\nexport function run<Input, ThisConfig extends IConfiguration = Config>(\n  operation: (context: IContext<ThisConfig>, value: Input) => void\n): IOperator<ThisConfig, Input, Input> {\n  return createOperator<ThisConfig>(\n    'run',\n    getFunctionName(operation),\n    (err, context, value, next) => {\n      if (err) next(err, value)\n      else {\n        const result = operation(context, value) as any\n\n        if (isPromise(result)) {\n          next(null, result.then(() => value))\n        } else {\n          next(null, value)\n        }\n      }\n    }\n  )\n}\n\nexport function catchError<Input, ThisConfig extends IConfiguration = Config>(\n  operation: (context: IContext<ThisConfig>, value: Error) => Input\n): IOperator<ThisConfig, Input, Input> {\n  return createMutationOperator<ThisConfig>(\n    'catchError',\n    getFunctionName(operation),\n    (err, context, value, next) => {\n      if (err) next(null, operation(context, err))\n      else\n        next(null, value, {\n          isSkipped: true,\n        })\n    }\n  )\n}\n\nexport function tryCatch<\n  Input,\n  ThisConfig extends IConfiguration = Config\n>(paths: {\n  try: IOperator<ThisConfig, Input>\n  catch: IOperator<ThisConfig, Error>\n}): IOperator<ThisConfig, Input, Input> {\n  const instance = (err, context, next) => {\n    if (err) next(err, context)\n    else {\n      const evaluateCatch = (err, catchContext) => {\n        operatorStopped(context, context.value)\n        next(err, createContext(catchContext, context.value))\n      }\n      const evaluateTry = (err, tryContext) => {\n        if (err) {\n          const newContext = createContext(\n            tryContext,\n            err,\n            context.execution.path && context.execution.path.concat('catch')\n          )\n          const nextWithPath = createNextPath(evaluateCatch)\n\n          // @ts-ignore\n          paths.catch(null, newContext, nextWithPath)\n        } else {\n          operatorStopped(context, context.value)\n          next(null, createContext(tryContext, context.value))\n        }\n      }\n\n      operatorStarted('tryCatch', '', context)\n\n      const newContext = createContext(\n        context,\n        context.value,\n        context.execution.path && context.execution.path.concat('try')\n      )\n      const nextWithPath = createNextPath(evaluateTry)\n\n      // @ts-ignore\n      paths.try(null, newContext, nextWithPath)\n    }\n  }\n  instance[IS_OPERATOR] = true\n\n  return instance as any\n}\n\nexport function fork<\n  Input,\n  Paths extends { [key: string]: IOperator<ThisConfig, any, any> },\n  ThisConfig extends IConfiguration = Config\n>(\n  operation: (context: IContext<ThisConfig>, value: Input) => keyof Paths,\n  paths: Paths & { [N in keyof Paths]: IOperator<ThisConfig, Input, any> }\n): IOperator<ThisConfig, Input, Input> {\n  return createOperator<ThisConfig>(\n    'fork',\n    getFunctionName(operation),\n    (err, context, value, next) => {\n      if (err) next(err, value)\n      else {\n        const path = operation(context, value)\n        next(null, value, {\n          path: {\n            name: String(path),\n            operator: paths[path],\n          },\n        })\n      }\n    }\n  )\n}\n\nexport function when<\n  Input,\n  OutputA,\n  OutputB,\n  ThisConfig extends IConfiguration = Config\n>(\n  operation: (context: IContext<ThisConfig>, value: Input) => boolean,\n  paths: {\n    true: IOperator<ThisConfig, Input, OutputA>\n    false: IOperator<ThisConfig, Input, OutputB>\n  }\n): IOperator<ThisConfig, Input, OutputA | OutputB> {\n  return createOperator<ThisConfig>(\n    'when',\n    getFunctionName(operation),\n    (err, context, value, next) => {\n      if (err) next(err, value)\n      else if (operation(context, value))\n        next(null, value, {\n          path: {\n            name: 'true',\n            operator: paths.true,\n          },\n        })\n      else\n        next(null, value, {\n          path: {\n            name: 'false',\n            operator: paths.false,\n          },\n        })\n    }\n  )\n}\n\nexport function wait<Input, ThisConfig extends IConfiguration = Config>(\n  ms: number\n): IOperator<ThisConfig, Input, Input> {\n  return createOperator('wait', String(ms), (err, context, value, next) => {\n    if (err) next(err, value)\n    else setTimeout(() => next(null, value), ms)\n  })\n}\n\nexport function debounce<Input, ThisConfig extends IConfiguration = Config>(\n  ms: number\n): IOperator<ThisConfig, Input, Input> {\n  let timeout\n  let previousFinal\n\n  return createOperator(\n    'debounce',\n    String(ms),\n    (err, context, value, next, final) => {\n      if (err) next(err, value)\n      else {\n        if (timeout) {\n          clearTimeout(timeout)\n          previousFinal(null, value)\n        }\n        previousFinal = final\n        timeout = setTimeout(() => {\n          timeout = null\n          next(null, value)\n        }, ms)\n      }\n    }\n  )\n}\n\nexport function throttle<Input, ThisConfig extends IConfiguration = Config>(\n  ms: number\n): IOperator<ThisConfig, Input, Input> {\n  let timeout\n  let previousFinal\n  let currentNext\n\n  return createOperator(\n    'throttle',\n    String(ms),\n    (err, context, value, next, final) => {\n      if (err) next(err, value)\n      else {\n        if (timeout) {\n          previousFinal(null, value)\n          currentNext = next\n        } else {\n          timeout = setTimeout(() => {\n            timeout = null\n            currentNext(null, value)\n          }, ms)\n        }\n        previousFinal = final\n        currentNext = next\n      }\n    }\n  )\n}\n\nexport function waitUntil<Input, ThisConfig extends IConfiguration = Config>(\n  operation: (state: ThisConfig['state']) => boolean\n): IOperator<ThisConfig, Input, Input> {\n  return createOperator<Config>(\n    'waitUntil',\n    operation.name,\n    (err, context, value, next) => {\n      if (err) next(err, value)\n      else {\n        const tree = context.execution.getTrackStateTree()\n        const test = () => {\n          if (operation(tree.state)) {\n            tree.dispose()\n            next(null, value)\n          }\n        }\n        tree.trackScope(test, test)\n      }\n    }\n  )\n}\n"]}