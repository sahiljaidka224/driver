import { IState } from '.';
declare type TStates = IState & {
    state: string | number;
};
export declare type StatemachineTransitions<States extends TStates> = {
    [State in States["state"]]: Array<States["state"]>;
};
export interface MachineMethods<States extends TStates> {
    matches<T extends States["state"]>(state: T): this is Statemachine<States, States extends {
        state: T;
    } ? States : never>;
    transition<State extends States["state"]>(state: State): this is Statemachine<States, States extends {
        state: State;
    } ? States : never>;
}
export declare type Statemachine<States extends TStates, State extends TStates = States> = State & MachineMethods<States>;
export declare function statemachine<States extends TStates>(definition: StatemachineTransitions<States>, state: States): Statemachine<States>;
export {};
