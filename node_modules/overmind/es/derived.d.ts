import { EventEmitter } from 'betsy';
import { IMutationTree, ITrackStateTree, ProxyStateTree } from 'proxy-state-tree';
import { Events } from './internalTypes';
export declare const IS_DERIVED: unique symbol;
export declare const IS_DERIVED_CONSTRUCTOR: unique symbol;
export declare class Derived {
    private cb;
    private isDirty;
    private previousProxifier;
    private value;
    private paths;
    private updateCount;
    private disposeOnMutation;
    constructor(cb: (state: object, parent: object) => void);
    private runScope;
    evaluate(eventHub: EventEmitter<Events>, tree: ITrackStateTree<any> | IMutationTree<any>, proxyStateTree: ProxyStateTree<any>, path: any): any;
}
