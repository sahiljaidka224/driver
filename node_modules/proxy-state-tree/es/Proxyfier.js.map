{"version":3,"file":"Proxyfier.js","sourceRoot":"","sources":["../src/Proxyfier.ts"],"names":[],"mappings":"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","sourcesContent":["import isPlainObject from 'is-plain-obj'\n\nimport { IMutationTree, ITrackStateTree, TTree } from './types'\n\nexport const IS_PROXY = Symbol('IS_PROXY')\nexport const PATH = Symbol('PATH')\nexport const VALUE = Symbol('VALUE')\nexport const PROXY_TREE = Symbol('PROXY_TREE')\n\nconst arrayMutations = new Set([\n  'push',\n  'shift',\n  'pop',\n  'unshift',\n  'splice',\n  'reverse',\n  'sort',\n  'copyWithin',\n])\n\nconst getValue = (proxyOrValue) =>\n  proxyOrValue && proxyOrValue[IS_PROXY] ? proxyOrValue[VALUE] : proxyOrValue\n\nconst isClass = (value) => typeof value === 'object' && value !== null && !Array.isArray(value) && value.constructor.name !== 'Object' && Object.isExtensible(value)\n\nexport class Proxifier {\n  CACHED_PROXY = Symbol('CACHED_PROXY')\n  delimiter: string\n  constructor(private tree: TTree) {\n    this.delimiter = tree.master.options.delimiter\n  }\n  private concat(path, prop) {\n    return path ? path + this.delimiter + prop : prop\n  }\n\n  ensureMutationTrackingIsEnabled(path) {\n    if (process.env.NODE_ENV === 'production') return\n\n    if (this.tree.master.options.devmode && !this.tree.canMutate()) {\n      throw new Error(\n        `proxy-state-tree - You are mutating the path \"${path}\", but it is not allowed. The following could have happened:\n        \n        - The mutation is explicitly being blocket\n        - You are passing state to a 3rd party tool trying to manipulate the state\n        - You are running asynchronous code and forgot to \"await\" its execution\n        `\n      )\n    }\n  }\n\n  isDefaultProxifier() {\n    return this.tree.proxifier === this.tree.master.proxifier\n  }\n\n  ensureValueDosntExistInStateTreeElsewhere(value) {\n    if (process.env.NODE_ENV === 'production') return\n\n    if (value && value[IS_PROXY] === true) {\n      throw new Error(\n        `proxy-state-tree - You are trying to insert a value that already exists in the state tree on path \"${\n          value[PATH]\n        }\"`\n      )\n    }\n\n    return value\n  }\n\n  trackPath(path: string) {\n    if (!this.tree.canTrack()) {\n      return\n    }\n\n    if (this.isDefaultProxifier()) {\n      const trackStateTree = this.tree.master.currentTree as ITrackStateTree<\n        any\n      >\n\n      if (!trackStateTree) {\n        return\n      }\n\n      trackStateTree.addTrackingPath(path)\n    } else {\n      ;(this.tree as ITrackStateTree<any>).addTrackingPath(path)\n    }\n  }\n  // With tracking trees we want to ensure that we are always\n  // on the currently tracked tree. This ensures when we access\n  // a tracking proxy that is not part of the current tracking tree (pass as prop)\n  // we move the ownership to the current tracker\n  getTrackingTree() {\n    if (this.tree.master.currentTree && this.isDefaultProxifier()) {\n      return this.tree.master.currentTree\n    }\n\n    if (!this.tree.canTrack()) {\n      return null\n    }\n\n    if (this.tree.canTrack()) {\n      return this.tree\n    }\n\n    return null\n  }\n  getMutationTree() {\n    return this.tree.master.mutationTree || (this.tree as IMutationTree<any>)\n  }\n  private isProxyCached(value, path) {\n    return (\n      value[this.CACHED_PROXY] &&\n      String(value[this.CACHED_PROXY][PATH]) === String(path)\n    )\n  }\n  private createArrayProxy(value, path) {\n    if (this.isProxyCached(value, path)) {\n      return value[this.CACHED_PROXY]\n    }\n\n    const proxifier = this\n\n    const proxy = new Proxy(value, {\n      get(target, prop) {\n        if (prop === IS_PROXY) return true\n        if (prop === PATH) return path\n        if (prop === VALUE) return value\n        if (prop === 'indexOf') {\n          return (searchTerm, offset) =>\n            value.indexOf(getValue(searchTerm), getValue(offset))\n        }\n        if (\n          prop === 'length' ||\n          (typeof target[prop] === 'function' &&\n            !arrayMutations.has(String(prop))) ||\n          typeof prop === 'symbol' || target[prop] instanceof Date\n        ) {\n          return target[prop]\n        }\n\n        const trackingTree = proxifier.getTrackingTree()\n        const nestedPath = proxifier.concat(path, prop)\n        const currentTree = trackingTree || proxifier.tree\n\n        trackingTree && trackingTree.proxifier.trackPath(nestedPath)\n        currentTree.trackPathListeners.forEach((cb) => cb(nestedPath))\n\n        const method = String(prop)\n\n        if (arrayMutations.has(method)) {\n          /* @__PURE__ */ proxifier.ensureMutationTrackingIsEnabled(nestedPath)\n          return (...args) => {\n            const mutationTree = proxifier.getMutationTree()\n\n            let result\n\n\n            if (process.env.NODE_ENV === 'production') {\n              result =  target[prop](...args)\n            } else {\n              result = target[prop](\n                ...args.map((arg) =>\n                  /* @__PURE__ */ proxifier.ensureValueDosntExistInStateTreeElsewhere(\n                    arg\n                  )\n                )\n              )\n            }\n\n            mutationTree.addMutation({\n              method,\n              path: path,\n              delimiter: proxifier.delimiter,\n              args: args,\n              hasChangedValue: true,\n            })\n\n            return result\n          }\n        }\n\n        if (target[prop] === undefined) {\n          return undefined\n        }\n\n        return proxifier.proxify(target[prop], nestedPath)\n      },\n      set(target, prop, value) {\n        const nestedPath = proxifier.concat(path, prop)\n\n        /* @__PURE__ */ proxifier.ensureMutationTrackingIsEnabled(nestedPath)\n        /* @__PURE__ */ proxifier.ensureValueDosntExistInStateTreeElsewhere(\n          value\n        )\n\n        const mutationTree = proxifier.getMutationTree()\n        const existingValue = target[prop]\n        const result = Reflect.set(target, prop, value)\n\n        mutationTree.addMutation({\n          method: 'set',\n          path: nestedPath,\n          args: [value],\n          delimiter: proxifier.delimiter,\n          hasChangedValue: true,\n        })\n\n        return result\n      },\n    })\n\n    Object.defineProperty(value, this.CACHED_PROXY, {\n      value: proxy,\n      configurable: true,\n    })\n\n    return proxy\n  }\n\n  private createObjectProxy(object, path) {\n    if (this.isProxyCached(object, path)) {\n      return object[this.CACHED_PROXY]\n    }\n\n    const proxifier = this\n\n    const proxy = new Proxy(object, {\n      get(target, prop) {\n        if (prop === IS_PROXY) return true\n        if (prop === PATH) return path\n        if (prop === VALUE) return object\n        if (prop === PROXY_TREE) return proxifier.tree\n\n        if (typeof prop === 'symbol' || prop in Object.prototype || target[prop] instanceof Date)\n          return target[prop]\n\n        \n        const descriptor = Object.getOwnPropertyDescriptor(target, prop) || (Object.getPrototypeOf(target) && Object.getOwnPropertyDescriptor(Object.getPrototypeOf(target), prop))\n\n        if (descriptor && 'get' in descriptor) {\n          const value = descriptor.get.call(proxy)\n\n          if (\n            proxifier.tree.master.options.devmode &&\n            proxifier.tree.master.options.onGetter\n          ) {\n            proxifier.tree.master.options.onGetter(\n              proxifier.concat(path, prop),\n              value\n            )\n          }\n\n          return value\n        }\n\n        const trackingTree = proxifier.getTrackingTree()\n        const targetValue = target[prop]\n        const nestedPath = proxifier.concat(path, prop)\n        const currentTree = trackingTree || proxifier.tree\n\n        if (typeof targetValue === 'function' && isClass(target)) {\n          return (...args) => targetValue.call(proxy, ...args)\n        } else if (typeof targetValue === 'function') {\n          if (proxifier.tree.master.options.onFunction) {\n            const { func, value } = proxifier.tree.master.options.onFunction(\n              trackingTree || proxifier.tree,\n              nestedPath,\n              targetValue\n            )\n            \n            target[prop] = func\n\n            return value\n          }\n          return targetValue.call(target, proxifier.tree, nestedPath)\n        } else {\n          currentTree.trackPathListeners.forEach((cb) => cb(nestedPath))\n          trackingTree && trackingTree.proxifier.trackPath(nestedPath)\n        }\n\n        if (targetValue === undefined) {\n          return undefined\n        }\n\n        return proxifier.proxify(targetValue, nestedPath)\n      },\n      set(target, prop, value) {\n        const nestedPath = proxifier.concat(path, prop)\n\n        /* @__PURE__ */ proxifier.ensureMutationTrackingIsEnabled(nestedPath)\n        /* @__PURE__ */ proxifier.ensureValueDosntExistInStateTreeElsewhere(\n          value\n        )\n\n        let objectChangePath\n\n        if (!(prop in target)) {\n          objectChangePath = path\n        }\n\n        const mutationTree = proxifier.getMutationTree()\n        const existingValue = target[prop]\n\n        if (typeof value === 'function' && proxifier.tree.master.options.onFunction) {\n          const result = proxifier.tree.master.options.onFunction(\n            proxifier.getTrackingTree() || proxifier.tree,\n            nestedPath,\n            value\n          )\n          \n          value = result.func\n        }\n\n        const hasChangedValue = value !== target[prop]\n        const result = Reflect.set(target, prop, value)\n\n        mutationTree.addMutation(\n          {\n            method: 'set',\n            path: nestedPath,\n            args: [value],\n            delimiter: proxifier.delimiter,\n            hasChangedValue\n          },\n          objectChangePath\n        )\n\n        return result\n      },\n      deleteProperty(target, prop) {\n        const nestedPath = proxifier.concat(path, prop)\n\n        /* @__PURE__ */ proxifier.ensureMutationTrackingIsEnabled(nestedPath)\n\n        let objectChangePath\n        if (prop in target) {\n          objectChangePath = path\n        }\n\n        const mutationTree = proxifier.getMutationTree()\n        const existingValue = target[prop]\n\n\n        delete target[prop]\n\n        mutationTree.addMutation(\n          {\n            method: 'unset',\n            path: nestedPath,\n            args: [],\n            delimiter: proxifier.delimiter,\n            hasChangedValue: true,\n          },\n          objectChangePath\n        )\n\n        return true\n      },\n    })\n\n    Object.defineProperty(object, this.CACHED_PROXY, {\n      value: proxy,\n      configurable: true,\n    })\n\n    return proxy\n  }\n  proxify(value: any, path: string) {\n    if (value) {\n      const isUnmatchingProxy =\n        value[IS_PROXY] &&\n        (String(value[PATH]) !== String(path) ||\n          value[VALUE][this.CACHED_PROXY] !== value)\n\n      if (isUnmatchingProxy) {\n        return this.proxify(value[VALUE], path)\n      } else if (value[IS_PROXY]) {\n        return value\n      } else if (Array.isArray(value)) {\n        return this.createArrayProxy(value, path)\n      } else if (isPlainObject(value) || isClass(value)) {\n        return this.createObjectProxy(value, path)\n      } \n    }\n\n    return value\n  }\n}\n"]}