export declare type Listener = {
    once: boolean;
    cb: ({}: {}) => void;
};
export declare class EventEmitter<T> {
    private events;
    emit<K extends keyof T>(event: K, msg: T[K]): void;
    emitAsync<K extends keyof T>(event: K, msg: T[K]): void;
    on<K extends keyof T>(event: K, cb: (msg: T[K]) => void): void;
    once<K extends keyof T>(event: K, cb: (msg: T[K]) => void): void;
    private addListener;
}
