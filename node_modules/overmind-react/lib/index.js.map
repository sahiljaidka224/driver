{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import 'proxy-state-tree'\nimport { unstable_scheduleCallback, unstable_getCurrentPriorityLevel, unstable_cancelCallback } from 'scheduler'\nimport {\n  EventType,\n  IConfiguration,\n  MODE_SSR,\n  Overmind,\n  OvermindMock,\n} from 'overmind'\nimport { IMutationCallback } from 'proxy-state-tree'\nimport * as react from 'react'\n\nconst IS_PRODUCTION = process.env.NODE_ENV === 'production'\nconst IS_TEST = process.env.NODE_ENV === 'test'\nconst isNode =\n  !IS_TEST && process && process.title && process.title.includes('node')\n\nexport type IReactComponent<P = any> =\n  | react.StatelessComponent<P>\n  | react.ComponentClass<P>\n  | react.ClassicComponentClass<P>\n\n// Diff / Omit taken from https://github.com/Microsoft/TypeScript/issues/12215#issuecomment-311923766\ntype Omit<T, K extends keyof T> = Pick<\n  T,\n  ({ [P in keyof T]: P } &\n    { [P in K]: never } & { [x: string]: never; [x: number]: never })[keyof T]\n>\n\nexport interface IConnect<Config extends IConfiguration> {\n  overmind: {\n    state: Overmind<Config>['state']\n    actions: Overmind<Config>['actions']\n    effects: Overmind<Config>['effects']\n    addMutationListener: Overmind<Config>['addMutationListener']\n    reaction: Overmind<Config>['reaction']\n    suspend: <T>(cb: () => T) => T\n  }\n}\n\nfunction throwMissingContextError() {\n  throw new Error(\n    'The Overmind hook could not find an Overmind instance on the context of React. Please make sure you use the Provider component at the top of your application and expose the Overmind instance there. Please read more in the React guide on the website'\n  )\n}\n\nconst context = react.createContext<Overmind<IConfiguration>>({} as Overmind<\n  IConfiguration\n>)\nlet nextComponentId = 0\n\nexport const Provider: React.ProviderExoticComponent<\n  React.ProviderProps<Overmind<IConfiguration> | OvermindMock<IConfiguration>>\n> = context.Provider\n\nfunction useForceRerender() {\n  const [{ flushId }, setTick] = react.useState({ tick: 0, flushId: 0})\n\n  const forceRerender = react.useCallback((flushId?) => {\n      setTick(current => ({\n        ...current,\n        tick: current.tick + 1,\n        flushId: flushId || current.flushId\n      }))\n  }, [])\n\n  return {\n    flushId, \n    forceRerender\n  }\n}\n\nlet currentComponentInstanceId = 0\nconst {\n  ReactCurrentOwner,\n} = (react as any).__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED\nconst useCurrentComponent = () => {\n  return ReactCurrentOwner &&\n    ReactCurrentOwner.current &&\n    ReactCurrentOwner.current.elementType\n    ? ReactCurrentOwner.current.elementType\n    : {}\n}\n\nconst useState =  <Config extends IConfiguration>(): Overmind<Config>['state'] => {\n  const overmind = react.useContext(context) as Overmind<Config>\n\n  if (!(overmind as any).mode) {\n    throwMissingContextError()\n  }\n\n  if (isNode || (overmind as any).mode.mode === MODE_SSR) {\n    return overmind.state\n  }\n\n  const trackingRef = react.useRef<any>(null)\n\n  const {flushId, forceRerender} = useForceRerender()\n\n  if (!trackingRef.current) {\n    trackingRef.current = {\n      tree: (overmind as any).proxyStateTree.getTrackStateTree(),\n      hasUpdatedBeforeCommit: false,\n      stopTrackingTask: unstable_scheduleCallback(unstable_getCurrentPriorityLevel(), () => {\n        trackingRef.current.tree.stopTracking()\n      })\n    }\n  }\n\n  if (IS_PRODUCTION) {\n    react.useLayoutEffect(() => {\n      trackingRef.current.mounted = true\n      \n\n      if (trackingRef.current.hasUpdatedBeforeCommit) {\n        forceRerender()\n      }\n\n      return () => {\n        ;(overmind as any).proxyStateTree.disposeTree(trackingRef.current.tree)\n      }\n    }, [])\n\n    react.useLayoutEffect(() => {\n      if (trackingRef.current.stopTrackingTask) {\n        unstable_cancelCallback(trackingRef.current.stopTrackingTask)\n        trackingRef.current.stopTrackingTask = null\n      }\n      trackingRef.current.tree.stopTracking()\n    })\n    trackingRef.current.tree.track(() => {\n      if (trackingRef.current.mounted) {\n        forceRerender()\n      } else {\n        trackingRef.current.hasUpdatedBeforeCommit = true\n      }\n    })\n  } else {\n    const component = useCurrentComponent()\n    const name = component.name\n    component.__componentId =\n      typeof component.__componentId === 'undefined'\n        ? nextComponentId++\n        : component.__componentId\n\n    const { current: componentInstanceId } = react.useRef<any>(\n      currentComponentInstanceId++\n    )\n\n    react.useLayoutEffect(() => {\n      trackingRef.current.mounted = true\n      overmind.eventHub.emitAsync(EventType.COMPONENT_ADD, {\n        componentId: component.__componentId,\n        componentInstanceId,\n        name,\n        paths: Array.from(trackingRef.current.tree.pathDependencies) as any,\n      })\n\n      if (trackingRef.current.hasUpdatedBeforeCommit) {\n        forceRerender()\n      }\n\n      return () => {\n        ;(overmind as any).proxyStateTree.disposeTree(trackingRef.current.tree)\n        overmind.eventHub.emitAsync(EventType.COMPONENT_REMOVE, {\n          componentId: component.__componentId,\n          componentInstanceId,\n          name,\n        })\n      }\n    }, [])\n\n    react.useLayoutEffect(() => {\n      if (trackingRef.current.stopTrackingTask) {\n        unstable_cancelCallback(trackingRef.current.stopTrackingTask)\n        trackingRef.current.stopTrackingTask = null\n      }\n      trackingRef.current.tree.stopTracking()\n      overmind.eventHub.emitAsync(EventType.COMPONENT_UPDATE, {\n        componentId: component.__componentId,\n        componentInstanceId,\n        name,\n        flushId,\n        paths: Array.from(trackingRef.current.tree.pathDependencies) as any,\n      })\n    })\n    trackingRef.current.tree.track(() => {\n      if (trackingRef.current.mounted) {\n        forceRerender()\n      } else {\n        trackingRef.current.hasUpdatedBeforeCommit = true\n      }\n    })\n  }\n  \n\n  return trackingRef.current.tree.state\n}\n\nconst useActions =  <Config extends IConfiguration>(): Overmind<Config>['actions'] => {\n  const overmind = react.useContext(context) as Overmind<Config>\n\n  if (!(overmind as any).mode) {\n    throwMissingContextError()\n  }\n  \n  return overmind.actions\n}\n\nconst useEffects =  <Config extends IConfiguration>(): Overmind<Config>['effects'] => {\n  const overmind = react.useContext(context) as Overmind<Config>\n\n  if (!(overmind as any).mode) {\n    throwMissingContextError()\n  }\n  \n  return overmind.effects\n}\n\nconst useReaction =  <Config extends IConfiguration>(): Overmind<Config>['reaction'] => {\n  const overmind = react.useContext(context) as Overmind<Config>\n\n  if (!(overmind as any).mode) {\n    throwMissingContextError()\n  }\n  \n  return overmind.reaction\n}\n\nexport const createStateHook: <Config extends IConfiguration>() => () => Overmind<Config>['state'] = () => {\n  return useState as any\n}\n\nexport const createActionsHook: <Config extends IConfiguration>() => () => Overmind<Config>['actions'] = ()=> {\n  return useActions as any\n}\n\nexport const createEffectsHook: <Config extends IConfiguration>() => () => Overmind<Config>['effects'] = () => {\n  return useEffects as any\n}\n\nexport const createReactionHook: <Config extends IConfiguration>() => () => Overmind<Config>['reaction'] = () => {\n  return useReaction as any\n}\n\nexport const createHook: <Config extends IConfiguration>() => () => {\n  state: Overmind<Config>['state']\n  actions: Overmind<Config>['actions']\n  effects: Overmind<Config>['effects']\n  addMutationListener: (cb: IMutationCallback) => () => void\n  reaction: Overmind<Config>['reaction']\n} = () => {\n  return () => {\n    const state = useState()\n    const actions = useActions()\n    const effects = useEffects()\n    const overmind = react.useContext(context)\n\n    return {\n      state,\n      actions,\n      effects,\n      reaction: overmind.reaction,\n      addMutationListener: overmind.addMutationListener\n    } as any\n  }\n}\n\nexport const createConnect: <ThisConfig extends IConfiguration>() => <Props>(component: IReactComponent<\n  Props & {\n    overmind: {\n      state: Overmind<ThisConfig>['state']\n      actions: Overmind<ThisConfig>['actions']\n      reaction: Overmind<ThisConfig>['reaction']\n    }\n  }\n>) => IReactComponent<\n  Omit<\n    Props & IConnect<Overmind<ThisConfig>>,\n    keyof IConnect<Overmind<ThisConfig>>\n  >\n>  = () => {\n  return (\n    component\n  )=> {\n    let componentInstanceId = 0\n    const name = component.name\n    const populatedComponent = component as any\n    populatedComponent.__componentId =\n      typeof populatedComponent.__componentId === 'undefined'\n        ? nextComponentId++\n        : populatedComponent.__componentId\n    const isClassComponent =\n      component.prototype && typeof component.prototype.render === 'function'\n\n    if (isClassComponent) {\n      const originalRender = component.prototype.render\n      component.prototype.render = function() {\n        if (this.props.overmind) {\n          return this.props.overmind.tree.trackScope(\n            () => originalRender.call(this),\n            this.props.overmind.onUpdate\n          )\n        }\n\n        return originalRender.call(this)\n      }\n    }\n\n    if (IS_PRODUCTION) {\n      class HOC extends react.Component {\n        tree: any\n        overmind: any\n        state: {\n          overmind: any\n        }\n        wrappedComponent: any\n        static contextType = context\n        constructor(props, context) {\n          super(props)\n\n          if (!context) {\n            throwMissingContextError()\n          }\n          this.overmind = context\n          this.tree = this.overmind.proxyStateTree.getTrackStateTree()\n          this.state = {\n            overmind: {\n              state: this.tree.state,\n              effects: this.overmind.effects,\n              actions: this.overmind.actions,\n              addMutationListener: this.overmind.addMutationListener,\n              onUpdate: this.onUpdate,\n              tree: this.tree,\n              reaction: this.overmind.reaction,\n            },\n          }\n          this.wrappedComponent = (...args) =>\n            this.tree.trackScope(\n              () => (component as any)(...args),\n              this.onUpdate\n            )\n        }\n        componentWillUnmount() {\n          this.overmind.proxyStateTree.disposeTree(this.tree)\n        }\n        onUpdate = () => {\n          this.setState({\n            overmind: {\n              state: this.tree.state,\n              effects: this.overmind.effects,\n              actions: this.overmind.actions,\n              addMutationListener: this.overmind.addMutationListener,\n              onUpdate: this.onUpdate,\n              tree: this.tree,\n              reaction: this.overmind.reaction,\n            },\n          })\n        }\n        render() {\n          if (isClassComponent) {\n            return react.createElement(component, {\n              ...this.props,\n              overmind: this.state.overmind,\n            } as any)\n          }\n\n          return react.createElement(this.wrappedComponent, {\n            ...this.props,\n            overmind: this.state.overmind,\n          } as any)\n        }\n      }\n\n      return HOC as any\n    } else {\n      class HOC extends react.Component {\n        tree: any\n        overmind: any\n        componentInstanceId = componentInstanceId++\n        currentFlushId = 0\n        state: {\n          overmind: any\n        }\n        isUpdating: boolean\n        wrappedComponent: any\n        static contextType = context\n        constructor(props, context) {\n          super(props)\n\n          if (!context) {\n            throwMissingContextError()\n          }\n\n          this.overmind = context\n          this.tree = this.overmind.proxyStateTree.getTrackStateTree()\n          this.state = {\n            overmind: {\n              state: this.tree.state,\n              effects: this.overmind.effects,\n              actions: this.overmind.actions,\n              addMutationListener: this.overmind.addMutationListener,\n              onUpdate: this.onUpdate,\n              tree: this.tree,\n              reaction: this.overmind.reaction,\n            },\n          }\n          this.wrappedComponent = (...args) =>\n            this.tree.trackScope(\n              () => (component as any)(...args),\n              this.onUpdate\n            )\n        }\n        componentDidMount() {\n          this.overmind.eventHub.emitAsync(EventType.COMPONENT_ADD, {\n            componentId: populatedComponent.__componentId,\n            componentInstanceId: this.componentInstanceId,\n            name,\n            paths: Array.from(this.tree.pathDependencies) as any,\n          })\n        }\n        componentDidUpdate() {\n          if (this.isUpdating) {\n            this.overmind.eventHub.emitAsync(EventType.COMPONENT_UPDATE, {\n              componentId: populatedComponent.__componentId,\n              componentInstanceId: this.componentInstanceId,\n              name,\n              flushId: this.currentFlushId,\n              paths: Array.from(this.tree.pathDependencies as Set<string>),\n            })\n            this.isUpdating = false\n          }\n        }\n        componentWillUnmount() {\n          this.overmind.proxyStateTree.disposeTree(this.tree)\n          this.overmind.eventHub.emitAsync(EventType.COMPONENT_REMOVE, {\n            componentId: populatedComponent.__componentId,\n            componentInstanceId: this.componentInstanceId,\n            name,\n          })\n        }\n        onUpdate = (mutatons, paths, flushId) => {\n          this.currentFlushId = flushId\n          this.isUpdating = true\n          this.setState({\n            overmind: {\n              state: this.tree.state,\n              effects: this.overmind.effects,\n              actions: this.overmind.actions,\n              addMutationListener: this.overmind.addMutationListener,\n              onUpdate: this.onUpdate,\n              tree: this.tree,\n              reaction: this.overmind.reaction,\n            },\n          })\n        }\n        render() {\n          if (isClassComponent) {\n            return react.createElement(component, {\n              ...this.props,\n              overmind: this.state.overmind,\n            } as any)\n          }\n          return react.createElement(this.wrappedComponent, {\n            ...this.props,\n            overmind: this.state.overmind,\n          } as any)\n        }\n      }\n\n      Object.defineProperties(HOC, {\n        name: {\n          value: 'Connect' + (component.displayName || component.name || ''),\n        },\n      })\n\n      return HOC as any\n    }\n  }\n}\n"]}