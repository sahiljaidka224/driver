import 'proxy-state-tree';
import { IConfiguration, Overmind, OvermindMock } from 'overmind';
import { IMutationCallback } from 'proxy-state-tree';
import * as react from 'react';
export declare type IReactComponent<P = any> = react.StatelessComponent<P> | react.ComponentClass<P> | react.ClassicComponentClass<P>;
declare type Omit<T, K extends keyof T> = Pick<T, ({
    [P in keyof T]: P;
} & {
    [P in K]: never;
} & {
    [x: string]: never;
    [x: number]: never;
})[keyof T]>;
export interface IConnect<Config extends IConfiguration> {
    overmind: {
        state: Overmind<Config>['state'];
        actions: Overmind<Config>['actions'];
        effects: Overmind<Config>['effects'];
        addMutationListener: Overmind<Config>['addMutationListener'];
        reaction: Overmind<Config>['reaction'];
        suspend: <T>(cb: () => T) => T;
    };
}
export declare const Provider: React.ProviderExoticComponent<React.ProviderProps<Overmind<IConfiguration> | OvermindMock<IConfiguration>>>;
export declare const createStateHook: <Config extends IConfiguration>() => () => Overmind<Config>['state'];
export declare const createActionsHook: <Config extends IConfiguration>() => () => Overmind<Config>['actions'];
export declare const createEffectsHook: <Config extends IConfiguration>() => () => Overmind<Config>['effects'];
export declare const createReactionHook: <Config extends IConfiguration>() => () => Overmind<Config>['reaction'];
export declare const createHook: <Config extends IConfiguration>() => () => {
    state: Overmind<Config>['state'];
    actions: Overmind<Config>['actions'];
    effects: Overmind<Config>['effects'];
    addMutationListener: (cb: IMutationCallback) => () => void;
    reaction: Overmind<Config>['reaction'];
};
export declare const createConnect: <ThisConfig extends IConfiguration>() => <Props>(component: IReactComponent<Props & {
    overmind: {
        state: Overmind<ThisConfig>['state'];
        actions: Overmind<ThisConfig>['actions'];
        reaction: Overmind<ThisConfig>['reaction'];
    };
}>) => IReactComponent<Omit<Props & IConnect<Overmind<ThisConfig>>, keyof IConnect<Overmind<ThisConfig>>>>;
export {};
